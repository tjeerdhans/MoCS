<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<appSettings>
		<add key="ServiceBaseAddress" value="http://localhost:8099/MoCSService"/>
		<!--<add key="AssignmentBasePath" value="C:\Projects\MoCs\trunk\MoCS\assignments\"/>-->
		<add key="assignmentsBasePath" value="C:\Projects\MoCS\assignments"/>
		<!--<add key="DataAccess" value="MoCS.Data.SQLDataAccess"/>-->
		<add key="DataAccess" value="MoCS.Data.EntityDataAccess"/>
		<add key="SubmitMaxSize" value="128"/>
		<!-- in KB -->
		<add key="UseNotification" value="true"/>
	</appSettings>
	<connectionStrings>
		<add name="MoCS.Data.SQLDataAccess" connectionString="Data Source=(localdb)\v11.0;Initial Catalog=MoCS;Integrated Security=True;"/>
		<add name="MoCS" connectionString="Data Source=(localdb)\v11.0;Initial Catalog=MoCS;Integrated Security=True;"/>
		<!--<add name="MoCSModelContainer" connectionString="metadata=res://*/MoCSModel.csdl|res://*/MoCSModel.ssdl|res://*/MoCSModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=.\SQLEXPRESS;Initial Catalog=MoCSRefactor;Integrated Security=True;MultipleActiveResultSets=True&quot;" providerName="System.Data.EntityClient" />-->
		<add name="MoCSModelContainer" connectionString="metadata=res://*/;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=(localdb)\v11.0;Initial Catalog=MoCS;Integrated Security=True;MultipleActiveResultSets=True&quot;" providerName="System.Data.EntityClient"/>
		<!--<add name="ApplicationServices" connectionString="data source=.\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|aspnetdb.mdf;User Instance=true" providerName="System.Data.SqlClient"/>-->
	</connectionStrings>
	<system.web>
		<!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
    -->
		<compilation debug="true" targetFramework="4.0">
			<assemblies>
				<add assembly="System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/></assemblies>
		</compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
    -->
		<authentication mode="Forms">
			<forms loginUrl="~/Account.mvc/LogOn" timeout="2880"/>
		</authentication>
		<membership defaultProvider="MoCSMembershipProvider">
      <providers>
        <clear/>
        <add name="MoCSMembershipProvider" type="MoCS.WebClient.Models.MoCSMembershipProvider, MoCS.WebClient" />
        <!--<add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="ApplicationServices" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" applicationName="/"/>-->
      </providers>
    </membership>
		<!--<profile>
      <providers>
        <clear/>
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="ApplicationServices" applicationName="/"/>
      </providers>
    </profile>-->
		<!--<roleManager enabled="false">
      <providers>
        <clear/>
        <add connectionStringName="ApplicationServices" applicationName="/" name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
        <add applicationName="/" name="AspNetWindowsTokenRoleProvider" type="System.Web.Security.WindowsTokenRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>
      </providers>
    </roleManager>-->
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
    -->
    <customErrors mode="Off" />
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
			<namespaces>
				<add namespace="System.Web.Mvc"/>
				<add namespace="System.Web.Mvc.Ajax"/>
				<add namespace="System.Web.Mvc.Html"/>
				<add namespace="System.Web.Routing"/>
				<add namespace="System.Linq"/>
				<add namespace="System.Collections.Generic"/>
			</namespaces>
		</pages>
		<httpHandlers>
			<add verb="*" path="*.mvc" validate="false" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</httpHandlers>
	</system.web>
	<system.web.extensions/>
	<!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
	<system.webServer>
		<validation validateIntegratedModeConfiguration="false"/>
		<modules runAllManagedModulesForAllRequests="true">
		</modules>
		<handlers>
			<remove name="MvcHttpHandler"/>
			<remove name="UrlRoutingHandler"/>
			<add name="MvcHttpHandler" preCondition="integratedMode" verb="*" path="*.mvc" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
		</handlers>
	</system.webServer>
	<runtime>
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35"/>
				<bindingRedirect oldVersion="1.0.0.0" newVersion="2.0.0.0"/>
			</dependentAssembly>
		</assemblyBinding>
	</runtime>
	<system.serviceModel>
		<bindings>
			<basicHttpBinding>
				<binding name="BasicHttpBinding_INotify">
					<security mode="None">
					</security>
				</binding>
			</basicHttpBinding>
		</bindings>
		<client>
			<endpoint address="http://localhost:8001/Notify" binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_INotify" contract="MoCSServiceReference.INotify"/>
		</client>
	</system.serviceModel>
</configuration>
